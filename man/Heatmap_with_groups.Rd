% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Heatmap.R
\name{Heatmap_with_groups}
\alias{Heatmap_with_groups}
\title{Create a Heatmap.}
\usage{
Heatmap_with_groups(
  D,
  id,
  protein_names_col = NULL,
  na_method = "na.omit",
  filtermissings = 2,
  groups = NULL,
  group_colours = NULL,
  column_split = NULL,
  cluster_column_slices = FALSE,
  cluster_rows = TRUE,
  cluster_columns = TRUE,
  dist_method = "pearson",
  clust_method = "complete",
  symmetric_legend = TRUE,
  scale_data = TRUE,
  output_path = paste0(getwd(), "//"),
  suffix = NULL,
  legend_name = "Legend",
  title = "Heatmap",
  legend_colours = c("blue", "white", "red"),
  plot_height = 20,
  plot_width = 20,
  plot_dpi = 300,
  log_data = TRUE,
  log_base = 2,
  colour_scale_max = NULL,
  textsize = 15,
  ...
)
}
\arguments{
<<<<<<< HEAD
\item{D}{\strong{data.frame} \cr
The data set containing only protein intensities, already filtered for interesting candidates.}

\item{id}{\strong{data.frame} \cr
The corresponding ID columns for the parameter D e.g. containing further columns like protein or gene names}
=======
\item{D}{dataframe containing only protein intensities (if applicable, already filtered for interesting candidate proteins)}

\item{id}{dataframe containing further columns, e.g. protein or gene names}
>>>>>>> b4b9e04 (fix lineplot branch)

\item{protein_names_col}{\strong{integer} \cr
The column with protein or gene names, if the names should be plotted.}

<<<<<<< HEAD
\item{na_method}{\strong{character} \cr
The method with which missing values are handeled.
Options are "na.omit" (proteins with any missing values will be removed), "impute" (missing values will be imputed) and "keep" (missing values will be kept).
Note that clustering may not work when too many missing values are present.}
=======
\item{na_method}{"na.omit" -> proteins with any missing values will be removed
Please note that clustering may not work when too many missing values are present.}
>>>>>>> b4b9e04 (fix lineplot branch)

\item{filtermissings}{\strong{integer} \cr
The threshold for missing values.
If a protein has more missing values, it will be filtered out.
Note that rows with only 1 or 2 valid values may cause problems with clustering.}

\item{groups}{\strong{character factor} \cr
The group of the data with two or more grouping variables.}

\item{group_colours}{\strong{character} \cr
? A named list of group colours (discrete vars) or colour functions (continuous vars)}

\item{column_split}{\strong{character} \cr
? The name of the column in groups, if the columns should be split.}

\item{cluster_column_slices}{\strong{logical} \cr
? If \code{TRUE}, column slices will be clustered.}

<<<<<<< HEAD
\item{cluster_rows}{\strong{logical} \cr
If \code{TRUE}, the rows will be clustered.}

\item{cluster_columns}{\strong{logical} \cr
If \code{TRUE}, the columns will be clustered.}
=======
\item{cluster_rows}{logical determining if rows will be clustered. Alternatively a dendrogram can be provided (potentially coloured using the dendextend package).}

\item{cluster_columns}{logical determining if columns will be clustered. Alternatively a dendrogram can be provided (potentially coloured using the dendextend package).}
>>>>>>> b4b9e04 (fix lineplot branch)

\item{dist_method}{\strong{character} \cr
The distance metric for clustering. Options are "pearson", "spearman" and "euclidean".}

\item{clust_method}{\strong{character} \cr
The linkage method for clustering. Options are "complete", "single" and "average".}

<<<<<<< HEAD
\item{symmetric_legend}{\strong{logical} \cr
If \code{TRUE}, the colour code will be  symmetric.
Note that it only make sense for z-scored data.}

\item{scale_data}{\strong{logical} \cr
If \code{TRUE}, the data will be scaled ( = z-scored).}
=======
\item{symmetric_legend}{should colour code be made symmetric? (only makes sense for z-scored data)}

\item{scale_data}{should intensities be scaled ( = z-scored per row/protein)? Usually recommended for better visualization of the heatmap.}
>>>>>>> b4b9e04 (fix lineplot branch)

\item{output_path}{\strong{character} \cr
The path to the output folder.}

\item{suffix}{\strong{character} \cr
The suffix of the file names should have one.}

\item{legend_name}{\strong{character} \cr
The name for legend.}

<<<<<<< HEAD
\item{title}{\strong{character} \cr
The title of the plot.}
=======
\item{title}{title of the heatmap plot}
>>>>>>> b4b9e04 (fix lineplot branch)

\item{legend_colours}{colours for colour gradient (vector of 3 color names of hex codes for low-middle-high intensities)}

\item{plot_height}{plot height}

\item{plot_width}{plot width}

\item{plot_dpi}{plot resolution in DPI}

\item{log_data}{if TRUE, intensities will be log-transformed}

\item{log_base}{base for log-transformation}

\item{colour_scale_max}{maximum value for colour scale (useful if data contains strong outliers)}

\item{textsize}{test size for labels}

\item{plot_height}{\strong{numeric} \cr
The plot height in cm.}

\item{plot_width}{\strong{numeric} \cr
The plot width in cm.}

\item{plot_dpi}{\strong{integer} \cr
The "dots per inch" of the plot aka. the plot resolution.}

\item{log_data}{\strong{logical} \cr
If \code{TRUE}, the data will be log-transformed.}

\item{log_base}{\strong{integer} \cr
The base for the log-transformation, if \code{log_data = TRUE}.}

\item{colour_scale_max}{\strong{numeric} \cr
The cap value for which all greater values will receive the same color.}

\item{textsize}{\strong{integer} \cr
The size of text in the plot.}

\item{...}{Further arguments to Heatmap}
}
\value{
heatmap + data used for the heatmap before and after imputation
}
\description{
<<<<<<< HEAD
Create a Heatmap.
=======
This function produces a heatmap based on the Heatmap()-function from the ComplexHeatmap package.
Use cases may be to get an overview over the whole proteomics data set or parts of it
(e.g. interesting candidate proteins that were significant in prior analysis).
}
\details{
Missing values

Clustering, Optionen an Methoden (all based on hclust function)

EinfÃ¤rben weiterer Variablen

weitere Einstelloptionen
}
\examples{
# TODO
>>>>>>> b4b9e04 (fix lineplot branch)
}
